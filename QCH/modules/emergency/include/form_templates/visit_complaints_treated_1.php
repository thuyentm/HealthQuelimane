<?php
/*
--------------------------------------------------------------------------------
HHIMS - Hospital Health Information Management System
Copyright (c) 2011 Information and Communication Technology Agency of Sri Lanka
<http: www.hhims.org/>
----------------------------------------------------------------------------------
This program is free software: you can redistribute it and/or modify it under the
terms of the GNU Affero General Public License as published by the Free Software 
Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR 
A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along 
with this program. If not, see <http://www.gnu.org/licenses/> or write to:
Free Software  HHIMS
C/- Lunar Technologies (PVT) Ltd,
15B Fullerton Estate II,
Gamagoda, Kalutara, Sri Lanka
---------------------------------------------------------------------------------- 
Author: Mr. Thurairajasingam Senthilruban   TSRuban[AT]mdsfoss.org
Consultant: Dr. Denham Pole                 DrPole[AT]gmail.com
URL: http: www.hhims.org
----------------------------------------------------------------------------------
*/

include_once 'mds_reporter/MDSReporter.php';
include_once '../class/MDSDataBase.php';
include_once '../mdsCore.php';
include_once '../class/MDSHospital.php';

$hospital = getHospital();
$pdf = new MDSReporter('P', 'mm', 'A5');
$pdf->addPage();

$from = $_GET['from'];
$to = $_GET['to'];
$visitType = $_GET['vtype'];
$sort = $_GET['sort'];
$from_date = new DateTime($_GET['from']);
$to_date = new DateTime($_GET['to']);

$visitTypes = array();
$where = '';
$pdf->writeTitle($hospital);
$pdf->writeSubTitle('Visit Complaints Treated From ' . $from . ' To ' . $to);
$pdf->Ln();

if ($visitType == 'All') {
    $mdsDB1 = MDSDataBase::GetInstance();
    $mdsDB1->connect();
    $sql1 = "select `Name` from visit_type";
    $result1 = $mdsDB1->mysqlQuery($sql1);
    while ($row1 = $mdsDB1->mysqlFetchArray($result1)) {
        array_push($visitTypes, $row1['Name']);
    }
    $mdsDB1->close();
} else {
    array_push($visitTypes, $visitType);
}

$complaints = array();
$mdsDB2 = MDSDataBase::GetInstance();
$mdsDB2->connect();
$sql2 = "select `Name` from complaints order by `Name`";
$result2 = $mdsDB2->mysqlQuery($sql2);
while ($row2 = $mdsDB2->mysqlFetchArray($result2)) {
    array_push($complaints, $row2['Name']);
}
$mdsDB2->close();

$diff = getDiffDays($_GET['from'], $_GET['to']);

//process time calculation start
$start=microtime(); 
$start=explode(" ",$start); 
$start=$start[1]+$start[0];

for ($index = 0; $index <= $diff; $index++) {
    //get selected date
    $date = $from_date->format("Y-m-d");

    foreach ($visitTypes as $visitType) {



        $mdsDB3 = MDSDataBase::GetInstance();
        $mdsDB3->connect();
        $data = array();
        foreach ($complaints as $complaint) {
            $sql3 = "select count(PID) as comp_count from opd_visits where VisitType='$visitType' and DateTimeOfVisit like '$date%' and (Complaint like '$complaint' or Complaint like '%,$complaint' or Complaint like '%,$complaint,%' or Complaint like '$complaint,%')";
            $result3 = $mdsDB3->mysqlQuery($sql3);
            $row3 = $mdsDB3->mysqlFetchArray($result3);
            $comp_count = (int) $row3['comp_count'];
            if ($comp_count > 0) {
                $data[$complaint] = $comp_count;
            }
        }
        $mdsDB3->close();
        switch ($sort) {
            case 'alpha':
                ksort($data, SORT_STRING);
                break;
            case 'freq':
                asort($data, SORT_NUMERIC);
                $data = array_reverse($data);
                break;

            default:
                break;
        }
        if ($data) {
            $pdf->SetWidths(array(128));
            $pdf->SetAligns(array('C'));
            $pdf->Row(array($visitType . ":$date"), true);
            $pdf->SetWidths(array(98, 30));
            $pdf->SetAligns(array('L', 'L'));
            $pdf->Row(array("Complaints Treated", "Number"), true);
            $sum=0;
            foreach ($data as $key => $value) {
                $pdf->Row(array($key, $value));
                $sum+=$value;
            }
            $pdf->Row(array('Total', $sum),true);
            $pdf->Ln();
        }
    }

    //+1 to date
    date_add($from_date, new DateInterval('P1D'));
}

//process time calculation ends
$end=microtime(); 
$end=explode(" ",$end); 
$end=$end[1]+$end[0]; 
printf("Page was generated by PHP %s in %f seconds",phpversion(),$end-$start); 
$pdf->Output("visit_complaints_treated from $from to $to", 'I');
?>